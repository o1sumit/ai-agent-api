### Enhanced AI Agent API Endpoints

### Get AI Agent Status (Public)
GET http://localhost:3000/api/ai-agent/status
Content-Type: application/json

###

### Get Sample Queries (Public)
GET http://localhost:3000/api/ai-agent/samples
Content-Type: application/json

###

### Login to get JWT token (Required for authenticated endpoints)
POST http://localhost:3000/login
Content-Type: application/json

{
  "email": "user@example.com",
  "password": "password123"
}

###

### Process Natural Language Query (Requires Authentication)
POST http://localhost:3000/api/ai-agent/query
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "Get all users",
  "dbUrl": "mongodb://localhost:27017/ai_agent",
  "dbType": "mongodb",
  "dryRun": false,
  "refreshSchema": false
}

###

### Process Query - Find User by Email (Requires Authentication)
POST http://localhost:3000/api/ai-agent/query
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "Find user with email john@example.com",
  "dbUrl": "mongodb://localhost:27017/ai_agent",
  "dbType": "mongodb"
}

###

### Process Query - Count Users (Requires Authentication)
POST http://localhost:3000/api/ai-agent/query
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "How many users are registered?",
  "dbUrl": "mongodb://localhost:27017/ai_agent",
  "dbType": "mongodb"
}

###

### Process Query - Recent Users (Requires Authentication)
POST http://localhost:3000/api/ai-agent/query
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "Show me users created in the last 7 days",
  "dbUrl": "mongodb://localhost:27017/ai_agent",
  "dbType": "mongodb"
}

###

### Process Query - Gmail Users (Requires Authentication)
POST http://localhost:3000/api/ai-agent/query
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "Find all users with Gmail email addresses",
  "dbUrl": "mongodb://localhost:27017/ai_agent",
  "dbType": "mongodb"
}

###

### Process Query - Dry Run Preview (no execution)
POST http://localhost:3000/api/ai-agent/query
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "Show top 5 products by revenue in last 30 days",
  "dbUrl": "postgres://user:pass@localhost:5432/mydb",
  "dbType": "postgres",
  "dryRun": true
}

###

### Process Query - Force Schema Refresh
POST http://localhost:3000/api/ai-agent/query
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "List tables and columns",
  "dbUrl": "mysql://user:pass@localhost:3306/mydb",
  "dbType": "mysql",
  "refreshSchema": true
}

###

### Record Positive Feedback (Requires Authentication)
POST http://localhost:3000/api/ai-agent/feedback
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "queryId": "QUERY_ID_FROM_RESPONSE",
  "feedback": "positive"
}

###

### Record Negative Feedback (Requires Authentication)
POST http://localhost:3000/api/ai-agent/feedback
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "queryId": "QUERY_ID_FROM_RESPONSE",
  "feedback": "negative"
}

###

### Get User Statistics (Requires Authentication)
GET http://localhost:3000/api/ai-agent/stats
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

###

### Refresh Schema Cache (Requires Authentication)
POST http://localhost:3000/api/ai-agent/refresh-schema

###

### Process Query - Postgres Example (Requires Authentication)
POST http://localhost:3000/api/ai-agent/query
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

###

### Status and Samples (Public)
GET http://localhost:3000/api/ai-agent/status
Content-Type: application/json

###

GET http://localhost:3000/api/ai-agent/samples
Content-Type: application/json

{
  "query": "Top 5 products by revenue last 30 days",
  "dbUrl": "postgres://user:pass@localhost:5432/mydb",
  "dbType": "postgres",
  "dryRun": false,
  "refreshSchema": false
}

###

### Process Query - MySQL Example (Requires Authentication)
POST http://localhost:3000/api/ai-agent/query
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "query": "Recent orders in the last week",
  "dbUrl": "mysql://user:pass@localhost:3306/mydb",
  "dbType": "mysql",
  "dryRun": true
}
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE
